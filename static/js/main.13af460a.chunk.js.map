{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list-components.jsx","components/search/search-contact.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","customerCard","id","alt","name","email","CardLists","customer","map","customers","SearchContact","placeHolder","handleChange","useState","type","placeholder","onChange","App","state","Customer","SearchField","fetch","then","response","json","users","setState","this","filteredCustomer","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAYeA,EAVF,SAACC,GACV,OACI,0BAASC,UAAU,OAAnB,UACI,qBAAKC,IAAG,mCAA8BF,EAAMG,aAAaC,GAAjD,QAA2DC,IAAKL,EAAMG,aAAaG,OAClF,2CAAa,kCAAKN,EAAMG,aAAaG,WACrC,6CAAe,kCAAKN,EAAMG,aAAaI,gBCa7CC,EAjBG,SAACR,GACjB,OACE,mCAIE,sBAAKC,UAAU,YAAf,UACGD,EAAMS,SAASC,KAAI,SAACC,GAAD,OAClB,mCACE,cAAC,EAAD,CAAMR,aAAcQ,SAEpB,U,eCCGC,EAbO,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAClC,EAAsCC,mBAAS,IAA/C,6BACA,OACE,qBAAKd,UAAU,YAAf,SACE,uBACEe,KAAK,SACLC,YAAaJ,EACbK,SAAUJ,OCkCKK,E,kDAnCrB,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,MAAQ,CACXC,SAAU,GACVC,YAAa,IAJE,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEP,SAAUM,S,oBAE7C,WAAU,IAAD,OACP,EAA6BE,KAAKT,MAA3BC,EAAP,EAAOA,SAASC,EAAhB,EAAgBA,YACXQ,EAAiBT,EAASU,QAAO,SAAAV,GAAQ,OAAEA,EAASf,KAAK0B,cAAcC,SAASX,EAAYU,kBACjG,OACE,gCACE,wBAAQ/B,UAAU,MAAlB,SACE,4CAEA,cAAC,EAAD,CACEY,YAAY,iBACZC,aAAc,SAAAoB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WACzD,kCACE,cAAC,EAAD,CAAW3B,SAAUqB,a,GA1BfO,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.13af460a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <section className='card'>\r\n            <img src={`https://picsum.photos/id/${props.customerCard.id}/100`} alt={props.customerCard.name} />\r\n                     <label> Name:<b> {props.customerCard.name}</b></label>\r\n                     <label>EmailId:<b> {props.customerCard.email}</b></label>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport Card from \"../card/card\";\r\n\r\nconst CardLists = (props) => {\r\n  return (\r\n    <>\r\n      {/* <h2>\r\n            hello\r\n        </h2> */}\r\n      <div className=\"card-list\">\r\n        {props.customer.map((customers) => (\r\n          <>\r\n            <Card customerCard={customers} />\r\n          </>\r\n        ))}{\" \"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardLists;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SearchContact = ({placeHolder,handleChange}) => {\r\n  const [SearchField, setSearchField] = useState(\"\");\r\n  return (\r\n    <div className='SearchBox'>\r\n      <input\r\n        type=\"search\"\r\n        placeholder={placeHolder}\r\n        onChange={handleChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchContact;\r\n","import './App.css';\nimport { Component } from 'react';\nimport CardLists from './components/card-list/card-list-components';\nimport './Styles/styles.css';\nimport SearchContact from './components/search/search-contact';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Customer: [],\n      SearchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => (response.json()))\n      .then(users => this.setState({ Customer: users }))\n  }\n  render() {\n    const {Customer,SearchField}=this.state;\n   const filteredCustomer=Customer.filter(Customer=>Customer.name.toLowerCase().includes(SearchField.toLowerCase()))\n    return (\n      <div /* className=\"App\" */>\n        <header className=\"App\">\n          <h1>Contacts</h1>\n        </header>\n          <SearchContact \n            placeHolder=\"Search Contact\"\n            handleChange={e => this.setState({SearchField:e.target.value})}/>\n          <section>\n            <CardLists customer={filteredCustomer}>\n\n            </CardLists>\n\n          </section>\n      </div>\n        );\n  }\n}\n\n        export default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}